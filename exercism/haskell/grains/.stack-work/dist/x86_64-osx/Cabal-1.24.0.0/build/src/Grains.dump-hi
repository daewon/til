
==================== FINAL INTERFACE ====================
2016-09-07 14:48:20.282032 UTC

interface grains-0.0.0-9V2rQn0ubOW8kcuN3wbhIX:Grains 8001
  interface hash: 89ed59e156d06520a160495002e97a0e
  ABI hash: a81adc5826b94a851c5aa7aefa0c3697
  export-list hash: d853f02acc1fa8002e34dd4030547ffb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a4046e0fdab24403354cf30558c1ea1c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Grains.square
  Grains.total
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Maybe 5f2ba364cbe65c060bc5436bc0b9d049
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
18dbc89084516d780a35c7664635dcb1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Grains.$trModule2
                   Grains.$trModule1) -}
edd5ad4fda25455d29eae73d984fe631
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Grains"#) -}
841dbbbcf6e3138d0605848e91dcc270
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "grains-0.0.0-9V2rQn0ubOW8kcuN3wbhIX"#) -}
59bbd815031771a2cc3eccfc8ede2206
  square :: GHC.Real.Integral a => a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),U(U,A,A,A,A,A,A,A,A)><L,U> -}
474b978c9833c47d514f22d61d6f5504
  total :: GHC.Real.Integral a => a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(LLLLLLC(C(S))L)LLLLLLL),U(U,1*U(A,A,A,A,A,A,1*C1(C1(U)),A),A,A,A,A,A,A,A)>,
     Unfolding: (\ @ a ($dIntegral :: GHC.Real.Integral a) ->
                 let {
                   $dReal :: GHC.Real.Real a = GHC.Real.$p1Integral @ a $dIntegral
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Real @ a $dReal
                 } in
                 let {
                   k :: a -> a -> a = GHC.Num.+ @ a $dNum
                 } in
                 letrec {
                   go :: [a] -> a -> a {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (ds :: [a]) (eta :: a) ->
                     case ds of wild {
                       [] -> eta
                       : y ys
                       -> case Grains.square @ a $dIntegral y of wild1 {
                            GHC.Base.Nothing -> go ys eta
                            GHC.Base.Just r1 -> go ys (k eta r1) } }
                 } in
                 go
                   (GHC.Enum.enumFromTo
                      @ a
                      (GHC.Real.$p2Integral @ a $dIntegral)
                      (GHC.Num.fromInteger @ a $dNum Grains.total3)
                      (GHC.Num.fromInteger @ a $dNum Grains.total2))
                   (GHC.Num.fromInteger @ a $dNum Grains.total1)) -}
87ef31cc0f89f23ef84430873f1cebd0
  total1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
f68125162b5d0b44df1a340998508745
  total2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (64) -}
67d78805b57ec68e34ca79dc453a2c87
  total3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

