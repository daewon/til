
==================== FINAL INTERFACE ====================
2016-09-08 12:12:37.868029 UTC

interface main@main:Main 8001
  interface hash: 0d52ace9dba90c8e93b01359786e1381
  ABI hash: ddb7f4d1e861033a3ba9aac2e7e2f247
  export-list hash: 4140cfb841f5fee5450200f4c0d19e18
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c11b8a238d47271e42f490b30e4ca3bc
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.1@HUnit-1.3.1.1-21JuQs5D85SLjuJsLVrBpA
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      bob-0.0.0@bob-0.0.0-BYvLF0MkBeW5sNhLCN5oPY
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX
                      hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-CBi3a05QOkYKuqdkOcBGXf
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.3@quickcheck-io-0.1.3-20LaUAj6uCm7WGnEKOttpe
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.3@quickcheck-io-0.1.3-20LaUAj6uCm7WGnEKOttpe:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  bob-0.0.0@bob-0.0.0-BYvLF0MkBeW5sNhLCN5oPY:Bob d48946f70545260335f5382c9ae8f390
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX:Test.Hspec 78dc803eb34c235f155d93033cddbbe5
import  -/  hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX:Test.Hspec.Runner c6b4581156d29bf154af1feb1a1dc00e
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Runner c7720a97d0ead82751117f8752de8a5e
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Spec 0d4d28c7942f5103c3305800a22a03d9
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Spec.Monad 48ef85f0da2e43f641842b7a1463d937
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Options 61ba7d492fa3ca0832bdaefb1c85d684
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-CBi3a05QOkYKuqdkOcBGXf:Test.Hspec.Expectations ed04c0055cc439e272e97dfd4063c549
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1322a70127f08f4bf09129d0edfb499a
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 5,
     Strictness: <L,1*U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main49
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldBe1
                                     @ GHC.Base.String
                                     Main.main40
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     GHC.Show.$fShow[]_$s$fShow[]1
                                     GHC.Classes.$fEq[]_$s$fEq[]1
                                     (Bob.responseFor ww1)
                                     ww2)
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww3 { Unit# ww4 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww4 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
b78f97389f8258ceec566bbc374cc40d
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Base.String,
            expected :: GHC.Base.String}
b3ffdd12148c2d9cea37a32bb0ac2ce9
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
bc1ffbae2b969e01a930af6a25372fd2
  expected :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
547df147235bd178632b314cfaa8dd45
  input :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
6806c1c21e6749bca505cd02a2c47cea
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f2f74b31000f7f44e158a970636c9d13
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main109
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
aef6957b0ae64c5b6a2ca624074b6a94
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main104
                   Main.main103
                   Main.main76
                   Main.main11
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
4e1cc77752c0365940bc2010449fd42d
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "asking a numeric question"#) -}
c9f6dc435b4846fceaffce505614cffa
  main101 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Does this cryogenic chamber make me look fat?"#) -}
f52cb389bc65e86029f453340729c29a
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asking a question"#) -}
4c7be1267613e05fc4fbfbe3f8c840bb
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FCECDFCAAB"#) -}
79bb57189c60de12110c9155529b8d9c
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting gibberish"#) -}
ddd7cff55c781b4d96718149f7eee722
  main105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WATCH OUT!"#) -}
f88e5311f110e9be81e76dfec2da57ad
  main106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting"#) -}
36ab99c22ca40c44aec1139237f1b7c7
  main107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Tom-ay-to, tom-aaaah-to."#) -}
b5e0612aa2e00fd1438b2ad6524bc1e8
  main108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stating something"#) -}
4c96280d6158a4e5ceed93acb5d7fd14
  main109 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
e74d3b647cd8047abfdb262573908843
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main102
                   Main.main101
                   Main.main58
                   Main.main12
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
61ec0d16e143d3f39d2f94eed0d2c932
  main110 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
b6c3b59dc1a889a9cd5eca34e159bdc8
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main100
                   Main.main99
                   Main.main58
                   Main.main13
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b1c839739ba7d6216d344932e4c1f724
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main98
                   Main.main97
                   Main.main58
                   Main.main14
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b53c7c8f7b95161ad03531d3321c53b2
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main96
                   Main.main95
                   Main.main37
                   Main.main15
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
8bd4aad346e42b3852583c176d40fe0f
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main94
                   Main.main93
                   Main.main37
                   Main.main16
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
972758bb3ffb970a178d86419609961d
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main92
                   Main.main91
                   Main.main76
                   Main.main17
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
dab0ddf84a48d965a1ec0bd4a876cb27
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main90
                   Main.main89
                   Main.main76
                   Main.main18
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
46fa377133fb9e40948ed923183cd34a
  main18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main88
                   Main.main87
                   Main.main37
                   Main.main19
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
447369343657e23450d18651b00936ac
  main19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main86
                   Main.main85
                   Main.main58
                   Main.main20
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
532531bf00c45736fb10fb7b4ab45b9e
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Main.$wc
                        Main.main108
                        Main.main107
                        Main.main37
                        Main.main9
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main6
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main3
                                (case ipv1 of wild { (,) ds2 w1 -> w1 }))
                             (GHC.Types.[]
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ())))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) }) -}
65b99d833533edf6e35ffe162b142e20
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main84
                   Main.main83
                   Main.main76
                   Main.main21
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
832e68bafa6af3d42247a98eab3b7762
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main82
                   Main.main81
                   Main.main76
                   Main.main22
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
73c55fd763d7ba6a7e46dad02745ab6f
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main80
                   Main.main79
                   Main.main37
                   Main.main23
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
51bec51fc0ab1366407e35b591a2a8a4
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main78
                   Main.main77
                   Main.main76
                   Main.main24
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7da76c6f8ffed8996748eaa7dd008668
  main24 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main75
                   Main.main74
                   Main.main37
                   Main.main25
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
51ff19541a16f819f50ea9d7c8bb35fa
  main25 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main73
                   Main.main72
                   Main.main58
                   Main.main26
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
d3daa8388aee08dc32c840773f6e44ca
  main26 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main71
                   Main.main70
                   Main.main58
                   Main.main27
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
c406a811a9030b9f003d40830731476d
  main27 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main55
                   Main.main28
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
0540adb88596d5b2f4795ea9294d7ecf
  main28 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main68
                   Main.main67
                   Main.main55
                   Main.main29
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
400db5b72ad6bd12c3da55a637158a68
  main29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main66
                   Main.main65
                   Main.main55
                   Main.main30
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
2aad317c9b9e0dc5c55b5392adaa4132
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main4) -}
ddadc476657d143865ef00d6f815516f
  main30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main64
                   Main.main63
                   Main.main37
                   Main.main31
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b5e6bd01b5eff06eacb3b203ca2628e5
  main31 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main62
                   Main.main61
                   Main.main37
                   Main.main32
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
b963e74aab2f6703ac1387ec2756ac5f
  main32 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main60
                   Main.main59
                   Main.main58
                   Main.main33
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
d249bc8c70f805c71082183f9002d5e0
  main33 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main57
                   Main.main56
                   Main.main55
                   Main.main34
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
70eb5d66699cc5c9cb7c0684688fe471
  main34 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main39
                   Main.main38
                   Main.main37
                   Main.main35
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
c56291064bbd0bbdea07269fff4bd599
  main35 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main36 #)) -}
a37004d60bf92ffdf85f4ea9cff53898
  main36 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
fc639c4c1a7bcccf584e5180570170c7
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whatever."#) -}
71726fa39858bff60c9863bf7cdb6d16
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "This is a statement ending with whitespace      "#) -}
32611ee696f061a84ce18510f06ebe50
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-question ending with whitespace"#) -}
2e5eacb8d7b0bfade757df54f261fdc4
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "esponseFor"#) -}
a0d896442680c3afaaf88085aab0ecb9
  main40 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main48
                   Main.main41
                   GHC.Stack.Types.EmptyCallStack) -}
74acfb2368e431b93604423c70434af3
  main41 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main47
                   Main.main46
                   Main.main45
                   Main.main44
                   Main.main43
                   Main.main44
                   Main.main42) -}
f8da2917756e75dd8c5f0cba2472cffb
  main42 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 75#) -}
844ded3ca5d88fd7a3428ffc437e28c8
  main43 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
5bc526b6f2c065041b6705721e669c95
  main44 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
7e1f20b65075d623876c872371edc302
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
855397319976e46ca6a3c1284b2abb8c
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
47222b69acbcf1bfeccf7e74f78f9b67
  main47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
e8ba2ff31e6f21984309b24043bee3b5
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
9841851f2f8f3bd5d74ce41dba3a5c60
  main49 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main50) -}
1b8fbee0fae5aeb0d20e3225a254922e
  main5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
7ed00c31e02f17a852579df9c0252645
  main50 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main54
                   Main.main51
                   GHC.Stack.Types.EmptyCallStack) -}
2c7feac264016bd690f2c22f35493d4c
  main51 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main47
                   Main.main46
                   Main.main45
                   Main.main44
                   Main.main53
                   Main.main44
                   Main.main52) -}
d9627306bb2640f935c9ebe42ccf045b
  main52 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 35#) -}
164979242d61fd36abde15261a355995
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
d804b2587d795fd4101ba8ec6025d3dc
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
8576fda2cb679a7ef64671989530c12b
  main55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fine. Be that way!"#) -}
4af1880f0d27436da8178c5887ccc140
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\n\
                   \\r \t\v\\194\\160\\226\\128\\130"#) -}
3e822c937406c6c066a6556480ffe1d2
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "other whitespace"#) -}
f73a1eba0c2aa11d8d34bba24287fa29
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sure."#) -}
726a401dec9d79ce2b4e8f3f179caa4d
  main59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Okay if like my  spacebar  quite a bit?   "#) -}
b3d5dff7f358e98070ccf77c1fd99f49
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main8
                   Main.main7) -}
558f38d1a70ea7d50bb7bdf6d4b01f88
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ending with whitespace"#) -}
898c5e3e5404168fd8ceeb73e166f6a3
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "         hmmmmmmm..."#) -}
d26161f5f1470ad1f94cec26f672147e
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "starting with whitespace"#) -}
360586764c6c1165975b3f52550ba7b1
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Does this cryogenic chamber make me look fat?\n\
                   \no"#) -}
0dcdd2b1e2944c303dc74ec596ea54c6
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "multiple line question"#) -}
3e6c4976eb4330c49780d8d6ca68541f
  main65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\t\t\t\t\t\t\t\t\t\t"#) -}
23099d41925c0cabbef925fb5b5d54cb
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "alternate silence"#) -}
b4e4df6c9dca1b88cde5425431b74060
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "          "#) -}
13cc91998559fb3b9b0f3836b5f0eea3
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "prolonged silence"#) -}
8b262b6353f326e0d865536c2898f118
  main69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "silence"#) -}
eeea6e5a114438d1e7693a0077d7e44b
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ob"#) -}
1285b745daf5fe9d8e1d3061e91988ff
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Wait! Hang on. Are you going to be OK?"#) -}
0c47ca36157de15c6705bd79c4fb33ea
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "prattling on"#) -}
e4028de07ed9bd9f411e832df6babddd
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":) ?"#) -}
90d5e99c377079723cdc3865c1f2181d
  main73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-letters with question"#) -}
3542e1c301979feada256d06aec0508b
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Ending with ? means a question."#) -}
4d54e4eb4202be1963ffe32d88cd67c7
  main75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "statement containing question mark"#) -}
3f54c47aed6e6f234fdc7c7d18fefa82
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Whoa, chill out!"#) -}
9f7986688d562c432dda01e7e84ad756
  main77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "I HATE YOU"#) -}
c37fa35592845f68bf9bceaa8cce3a40
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "shouting with no exclamation mark"#) -}
25a1e32591ef4ade80267f76ea6f3a38
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\195\\156ML\\195\\164\\195\\156TS!"#) -}
991c2788c2d1fa6673c247846460b3a3
  main8 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'b'#) -}
d84add1501787df7da5b84a109f28d48
  main80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "calmly speaking with umlauts"#) -}
dbdb7c28383360ca76f11ee29b9e0bc4
  main81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\195\\156ML\\195\\132\\195\\156TS!"#) -}
28faefc50c526220ce47a9dd0c6b0ca2
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "shouting with umlauts"#) -}
f331f2b334a288f6e8018e4bbcc7fdac
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!"#) -}
d7bf4e4081537c572e6f338a558e762e
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "shouting with special characters"#) -}
197e8d6a3a87add5aa6b4cb0c9411c4e
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "4?"#) -}
688edc2a84300df71aa3729c5a40eda8
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "question with only numbers"#) -}
251c0adbecc35821660479b31155c0cc
  main87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1, 2, 3"#) -}
c69ca1191391b94eba8403b27d1a3bfa
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "only numbers"#) -}
b209afeb19301bd37734235a6f12a0ad
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "1, 2, 3 GO!"#) -}
08d0e47fd861ddfd03f765ccd2762c57
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main106
                   Main.main105
                   Main.main76
                   Main.main10
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
21adee1be959911627ec8bc3f8b03a89
  main90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouting numbers"#) -}
72b65cad743d1c67c2a57b02a0ed7ab2
  main91 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "WHAT THE HELL WERE YOU THINKING?"#) -}
5e9c291b617b6889215d4f6af219da2c
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "forceful question"#) -}
4c0818ba4d8d893f13725a93ede696e2
  main93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "It's OK if you don't want to go to the DMV."#) -}
977034913f582af4aa232d6a9828be30
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "using acronyms in regular speech"#) -}
5178dae252b2025a53e46f45ccfea319
  main95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Let's go make out behind the gym!"#) -}
b967901ab4bfcde58b1b376cbd0d2f09
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "talking forcefully"#) -}
b34817cdbc6963eb8101bf3abbb7c04f
  main97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fffbbcbeab?"#) -}
08e7320eadf987ced696af9d2de1ea47
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asking gibberish"#) -}
ecffbbb9bb8897ee756f03ce893069f9
  main99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "You are, what, like 15?"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

