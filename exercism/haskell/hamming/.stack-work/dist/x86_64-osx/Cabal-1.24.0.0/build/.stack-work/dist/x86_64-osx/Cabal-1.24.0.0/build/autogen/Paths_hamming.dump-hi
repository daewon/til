
==================== FINAL INTERFACE ====================
2016-09-10 10:15:58.184918 UTC

interface hamming-0.0.0-HpID8gVWjp5JznYos4062n:Paths_hamming 8001
  interface hash: 95050e716bb0677a448ca4dc028e2d0a
  ABI hash: c1f5a872530d6ec0d7a9ea9eef52bcb3
  export-list hash: cd5f3b43aec9cb74dc94ed758c555d19
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 67909ff5b2e18a05797c8a77196b73a9
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_hamming.getBinDir
  Paths_hamming.getDataDir
  Paths_hamming.getDataFileName
  Paths_hamming.getLibDir
  Paths_hamming.getLibexecDir
  Paths_hamming.getSysconfDir
  Paths_hamming.version
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Exception.Base 4e2b16a4aa23317e444a61cce8fedc63
import  -/  base-4.9.0.0:Data.Version c62fdf293aee148a8ebca631ccff2037
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.IO 7ddc7086a7fc3b7d7043cc7bc59a04ba
import  -/  base-4.9.0.0:GHC.IO.Exception 6616e78328d3d532254cd5e593c9c639
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
addDependentFile "/Users/daewon/.stack/programs/x86_64-osx/ghc-8.0.1/lib/ghc-8.0.1/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-osx/Cabal-1.24.0.0/build/autogen/cabal_macros.h"
44b72bb49802f423b22e117646ffaca4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_hamming.$trModule2
                   Paths_hamming.$trModule1) -}
b913d9a6b91897c4b3e82b0b17316ea8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths_hamming"#) -}
acf7c90c41d942ddbb30ce8258ab90d4
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "hamming-0.0.0-HpID8gVWjp5JznYos4062n"#) -}
57177ce80c22088e4160bcf53403c5f6
  bindir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/daewon/code/til/exercism/haskell/hamming/.stack-work/install/x86_64-osx/nightly-2016-07-17/8.0.1/bin"#) -}
c08e4eb04531fd8a0428b4d867f21390
  datadir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/daewon/code/til/exercism/haskell/hamming/.stack-work/install/x86_64-osx/nightly-2016-07-17/8.0.1/share/x86_64-osx-ghc-8.0.1/hamming-0.0.0"#) -}
7d5ce5b58375c4ad3e7aff65f8d36e85
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
39fdbaa2ed116c79e48d6cf8c61f2149
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_hamming.getBinDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_hamming.getBinDir2
                   eta) -}
8c0d886f2c1fc33c2ddb0184328b1173
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True -> (# eta, Paths_hamming.bindir #) } } } } }) -}
4b289b6bb3f6a70055b04aeade40bb8b
  getBinDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_hamming.getBinDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
6843067c82252ca9ba7fe81a4f1c5c07
  getBinDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1 Paths_hamming.getBinDir5) -}
f2d0205ee6766996891ac9a7d0c62537
  getBinDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hamming_bindir"#) -}
f7e953d523ee684df1b39428d92be4cf
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
4dbf2f4fc4fa74bf36927123370e7dd7
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_hamming.getDataDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_hamming.getDataDir2
                   eta) -}
88db88d6bc20e2b467f9c42866057139
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True -> (# eta, Paths_hamming.datadir #) } } } } }) -}
872d6c8f2abea6b6146a15766c3aa9fd
  getDataDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_hamming.getDataDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
18259798d884881e77e3cdaf147f73ba
  getDataDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_hamming.getDataDir5) -}
97067e16d230158569e95e027ae309bc
  getDataDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hamming_datadir"#) -}
8aa6e9df8bdaf529db0645d0ec8da0c6
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
0bda8dff74272d274e7d542681d0bd7c
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_hamming.getDataDir3
                          `cast`
                        (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        Paths_hamming.getDataDir2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString# "/"# name) #) }) -}
6b0166ef99a1b5319e77f3caa88d2190
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
0cd16c70396975a78b9d8a457b4a67a6
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_hamming.getLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_hamming.getLibDir2
                   eta) -}
75a24227dd388efdaacc31529f57005b
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True -> (# eta, Paths_hamming.libdir #) } } } } }) -}
fdcff310fc2243099f3047e7bc1180dc
  getLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_hamming.getLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
ab7b00671a6537abcfd0a2afebae1816
  getLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1 Paths_hamming.getLibDir5) -}
da66330840757cefa8a88c8bae684f28
  getLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hamming_libdir"#) -}
aae0d4b7e04f2bdaf2878784fbd765b4
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
1763e41cbfaa59fb6790dfce4caf5185
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_hamming.getLibexecDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_hamming.getLibexecDir2
                   eta) -}
95975e478d2dd6b16e559bc166b21f25
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True -> (# eta, Paths_hamming.libexecdir #) } } } } }) -}
5829b0e2e6ef89659f5014fe35d25f31
  getLibexecDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_hamming.getLibexecDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
bb3d9c1583a4bad198723ca25aa49c46
  getLibexecDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_hamming.getLibexecDir5) -}
84ecf2d233d960f54649819689e25ee2
  getLibexecDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hamming_libexecdir"#) -}
d0de9cb33aa753a5ae2db97121df4150
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_hamming.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
d26a6ac2739d7a3c97ad1c650e8af86d
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_hamming.getSysconfDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_hamming.getSysconfDir2
                   eta) -}
8adfff2f4da54589700ce640e0d9884e
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True -> (# eta, Paths_hamming.sysconfdir #) } } } } }) -}
3fd0e43dbf7384cf7751813be8f3abc6
  getSysconfDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_hamming.getSysconfDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
defd1b5f111acdadf6fd298a66279480
  getSysconfDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_hamming.getSysconfDir5) -}
5d85045280a522c681e414c53d6ea867
  getSysconfDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hamming_sysconfdir"#) -}
3382efdc895ce7edb63422d49d44c98a
  libdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/daewon/code/til/exercism/haskell/hamming/.stack-work/install/x86_64-osx/nightly-2016-07-17/8.0.1/lib/x86_64-osx-ghc-8.0.1/hamming-0.0.0-HpID8gVWjp5JznYos4062n"#) -}
18493053c0a787d13d3307b726747d5d
  libexecdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/daewon/code/til/exercism/haskell/hamming/.stack-work/install/x86_64-osx/nightly-2016-07-17/8.0.1/libexec"#) -}
26172ccd15261bab4aa1a76966555dc1
  sysconfdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/Users/daewon/code/til/exercism/haskell/hamming/.stack-work/install/x86_64-osx/nightly-2016-07-17/8.0.1/etc"#) -}
72bca9cb5776e149c3b761bc678df89a
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_hamming.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
c1fa5f5e6bea7ae079e006aa07fe0d59
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_hamming.version4
                   Paths_hamming.version2) -}
5519c87656f6137565ee79b063d6c72d
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_hamming.version4
                   Paths_hamming.version3) -}
908eeed57cbef7724aebd2637948a48f
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_hamming.version4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
b4f1d0c2d9c319ccaaaf46c243607d97
  version4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

