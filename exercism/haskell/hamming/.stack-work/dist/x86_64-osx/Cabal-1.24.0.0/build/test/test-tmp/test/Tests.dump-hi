
==================== FINAL INTERFACE ====================
2016-09-13 12:37:00.277868 UTC

interface main@main:Main 8001
  interface hash: 6aba09fa4964d481b6123e260ca6dd31
  ABI hash: ee632be37ef076978473f03bb46ee3ff
  export-list hash: 96225fcf380042656211b5d3e708d04e
  orphan hash: 3683b4e3569e0dbdae48297762b50ff5
  flag hash: c11b8a238d47271e42f490b30e4ca3bc
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.3.1.1@HUnit-1.3.1.1-21JuQs5D85SLjuJsLVrBpA
                      QuickCheck-2.8.2@QuickCheck-2.8.2-B7cXgOk7OAiKrNRsk2SfuA
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.1@ghc-boot-th-8.0.1
                      ghc-prim-0.5.0.0 hamming-0.0.0@hamming-0.0.0-HpID8gVWjp5JznYos4062n
                      hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX
                      hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF
                      hspec-expectations-0.7.2@hspec-expectations-0.7.2-CBi3a05QOkYKuqdkOcBGXf
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      quickcheck-io-0.1.3@quickcheck-io-0.1.3-20LaUAj6uCm7WGnEKOttpe
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      setenv-0.1.1.3@setenv-0.1.1.3-5zeeXxY3qb3AsPnIgczcsm
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      template-haskell-2.11.0.0
                      tf-random-0.5@tf-random-0.5-4z8OJUaXC1FRNfrLPFWAD
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         quickcheck-io-0.1.3@quickcheck-io-0.1.3-20LaUAj6uCm7WGnEKOttpe:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  hamming-0.0.0@hamming-0.0.0-HpID8gVWjp5JznYos4062n:Hamming fa56a736a6188e9d29c8babf2da83900
import  -/  hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX:Test.Hspec 78dc803eb34c235f155d93033cddbbe5
import  -/  hspec-2.2.3@hspec-2.2.3-C04Ajzoc2CS2xlhDiU7iwX:Test.Hspec.Runner c6b4581156d29bf154af1feb1a1dc00e
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Runner c7720a97d0ead82751117f8752de8a5e
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Spec 0d4d28c7942f5103c3305800a22a03d9
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Core.Spec.Monad 48ef85f0da2e43f641842b7a1463d937
import  -/  hspec-core-2.2.3@hspec-core-2.2.3-CV29SyHgMA0EPy33lXE7aF:Test.Hspec.Options 61ba7d492fa3ca0832bdaefb1c85d684
import  -/  hspec-expectations-0.7.2@hspec-expectations-0.7.2-CBi3a05QOkYKuqdkOcBGXf:Test.Hspec.Expectations ed04c0055cc439e272e97dfd4063c549
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
0d4ef7fa28c2a97d735a5d8f936b7ece
  $s$fEqMaybe :: GHC.Classes.Eq (GHC.Base.Maybe GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  Main.$s$fEqMaybe_$s$fEqMaybe_$c==
                  (GHC.Base.$fEqMaybe_$c/= @ GHC.Types.Int GHC.Classes.$fEqInt) -}
fc856f15bc9302eec53e4387db218abf
  $s$fEqMaybe_$s$fEqMaybe_$c== ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Types.Int)
                   (ds1 :: GHC.Base.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } }) -}
0b577c23a8525466a36e99ee0501d186
  $s$fShowMaybe :: GHC.Show.Show (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (GHC.Show.$fShowMaybe_$cshow @ GHC.Types.Int GHC.Show.$fShowInt)
                  Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList -}
efbccb9b7afae21ea88f878e56abcbd3
  $s$fShowMaybe_$s$fShowMaybe_$cshowList ::
    [GHC.Base.Maybe GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [GHC.Base.Maybe GHC.Types.Int])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   eta
                   eta1) -}
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
d3a46782c4c0d2338b97ad0f8ad91a99
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Integer.Type.Integer
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 6,
     Strictness: <L,1*U><L,U><L,U><L,1*U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.Maybe GHC.Integer.Type.Integer)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())[OneShot]
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Trans
                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)
                           (GHC.Types.N:IO[0] <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (case Test.Hspec.Core.Tree.$wspecItem
                                  @ Test.Hspec.Expectations.Expectation
                                  Main.main37
                                    `cast`
                                  (Sym (GHC.Classes.N:IP[0]
                                            <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                  Test.Hspec.Core.Example.$fExampleIO1
                                    `cast`
                                  (Trans
                                       (<Test.Hspec.Expectations.Expectation>_R
                                        ->_R <Test.Hspec.Core.Example.Params>_R
                                        ->_R ((Trans
                                                   (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                             <()>_N))
                                                   (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                               ->_R <GHC.Types.IO ()>_R)
                                              ->_R <GHC.Types.IO ()>_R)
                                        ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                        ->_R Sym (GHC.Types.N:IO[0]
                                                      <Test.Hspec.Core.Example.Result>_R))
                                       (Sym (Test.Hspec.Core.Example.N:Example[0]
                                                 <Test.Hspec.Expectations.Expectation>_N)))
                                  ww
                                  (Test.Hspec.Expectations.shouldBe1
                                     @ (GHC.Base.Maybe GHC.Types.Int)
                                     Main.main28
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"loc">_N <GHC.Stack.Types.CallStack>_N))
                                     Main.$s$fShowMaybe
                                     Main.$s$fEqMaybe
                                     (Hamming.distance ww1 ww2)
                                     (case ww3 of wild {
                                        GHC.Base.Nothing -> GHC.Base.Nothing @ GHC.Types.Int
                                        GHC.Base.Just x
                                        -> GHC.Base.Just
                                             @ GHC.Types.Int
                                             (GHC.Num.$fNumInt_$cfromInteger x) }))
                                    `cast`
                                  (Sym (GHC.Types.N:IO[0] <()>_R)) of ww4 { Unit# ww5 ->
                           Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             ww5 })
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
484a9127fada6bfcf538a12f4b49a79b
  data Case
    = Case {description :: GHC.Base.String,
            strand1 :: GHC.Base.String,
            strand2 :: GHC.Base.String,
            expected :: GHC.Base.Maybe GHC.Integer.Type.Integer}
441ef82e356d80bb92de67bb87e60524
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds1 }) -}
e6fe21416a2c625719bdd4956513467d
  expected :: Main.Case -> GHC.Base.Maybe GHC.Integer.Type.Integer
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds4 }) -}
48062724e4a98b288594b21121e2d34f
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a84c7834c8c47fff30f68973dbb2ee14
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main87
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
80deba86e0f0431684a29557b8bbeea2
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main83
                   Main.main82
                   Main.main81
                   Main.main64
                   Main.main11
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
15f11ecd01129ca3383e7c396391479a
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main80
                   Main.main79
                   Main.main76
                   Main.main59
                   Main.main12
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
5d658f5e153d9582daaff76d095e90df
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main78
                   Main.main77
                   Main.main76
                   Main.main64
                   Main.main13
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
830ce5e6fcba23d3ada81e90990959fc
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main75
                   Main.main74
                   Main.main73
                   Main.main64
                   Main.main14
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
7ab1b69d42c01f460ef38be693a735fc
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main72
                   Main.main71
                   Main.main70
                   Main.main59
                   Main.main15
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
cdce3ac7a6151e1c4a972d15c9523e8d
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main69
                   Main.main66
                   Main.main67
                   Main.main64
                   Main.main16
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
0efc6127efb228470cc91dd947e38ba3
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main68
                   Main.main67
                   Main.main66
                   Main.main64
                   Main.main17
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
4f1c5c5488406faa45ff12a1afb3fb66
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main63
                   Main.main62
                   Main.main61
                   Main.main59
                   Main.main18
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
bbc46b0594021e176a2c19c8ee330727
  main18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main58
                   Main.main57
                   Main.main56
                   Main.main54
                   Main.main19
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
e1dfd22ac17ba544040bfa6bf276b026
  main19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main53
                   Main.main52
                   Main.main51
                   Main.main49
                   Main.main20
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
f97e830bb7b4758812d4bb5070d3c4d1
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Main.$wc
                        Main.main86
                        Main.main82
                        Main.main82
                        Main.main46
                        Main.main9
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                       <GHC.Types.IO>_R
                                       <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main6
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main3
                                (case ipv1 of wild { (,) ds2 w1 -> w1 }))
                             (GHC.Types.[]
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ())))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) }) -}
e06b32be370509d0fb0ab5349be90d3d
  main20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main48
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main46
                   Main.main21
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
9d67aa2342464b174b40e621b054604a
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main45
                   Main.main44
                   Main.main43
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   Main.main22
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
5edd1d1178bbbf6f73f7970be30d334e
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main27
                   Main.main26
                   Main.main25
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   Main.main23
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
541bf7d0dcecb914f3163d0c39338027
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main24 #)) -}
37cfb7dec260a4e5dbc216d7aa60dd69
  main24 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
018ee33c9dee6e29b3fc60caae3c0a76
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGTG"#) -}
833a57e5c857108ef2453fc470b98126
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ATA"#) -}
fe50f3dd03d4e73a57a373dd0e17fc90
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "disallow second strand longer"#) -}
a103efee0bc13e0de6bf7ee5828dec2f
  main28 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main36
                   Main.main29
                   GHC.Stack.Types.EmptyCallStack) -}
6627c79557770d42aa1eca1f0c36e7e6
  main29 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main35
                   Main.main34
                   Main.main33
                   Main.main32
                   Main.main31
                   Main.main32
                   Main.main30) -}
62de0515f15a3f6225654d5f9e27270c
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main4) -}
cd6b22a42805a5ab89b0bfdcd7704d5c
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 69#) -}
609aca020e1064685005ed02ebb9d5e6
  main31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 22#) -}
e4f4a54852de95b9b2fe1348ba43d69f
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 24#) -}
e5e060fb8e27e3e5442ceaddc7d0bd9d
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
e1bc27b45ab413de001c41a1aee070a0
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
3fc86d81dbb515975830fc8d08e2af2f
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
ead5d6071399db6cf10a9e37797e8e20
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
1fe5a5834380460ca8990811f6f553d5
  main37 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main38) -}
13ad5ca7beedc4c20d56c2f4e161fb10
  main38 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main42
                   Main.main39
                   GHC.Stack.Types.EmptyCallStack) -}
46dc3daba2a2e56571d06460f9672aec
  main39 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main35
                   Main.main34
                   Main.main33
                   Main.main31
                   Main.main41
                   Main.main31
                   Main.main40) -}
9ac777c5633e781500fc5f59c70d8a21
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "istance"#) -}
f9d7895922b6945720efe375d2320445
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
e8b138064e14e1eda4321d04e68b024a
  main41 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
31acab96e9b18c8a371fa7b21f7ed0af
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
77f56cd5c69ef9e16bdf3b90f6a4ebcd
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AAA"#) -}
f70377a65d2ac3dd35fbd82a4c4c48dd
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AATG"#) -}
7bb81490896826d72f0751ec00c222aa
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "disallow first strand longer"#) -}
55a595050a215f471eb3970494896f6b
  main46 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main47) -}
4b3ec00da4a51e5d55985ca439719eff
  main47 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
d9582ff56677b8a3ce6be9e63f1f988e
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "empty strands"#) -}
4310755e3c724437a90a54bcbb268aea
  main49 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main50) -}
fb886fa7f29c02021aef748de24d18a4
  main5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd'#) -}
7f0b15e82798c4e6d3c576245cd52bca
  main50 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (9) -}
072241a620b03ef3c2946acb5bad5b49
  main51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGGACGGATTCT"#) -}
c326dd0962306e6d44e71956d1fd238b
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGACGGATTCTG"#) -}
8942ad5e68d54289e9beb89d42407b08
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "large distance in off-by-one strand"#) -}
252404d4536feb9f42693d7804a8a8d0
  main54 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main55) -}
667e724732394912e8d0e2434227a217
  main55 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
e4d7f049edb6cb878b6b1a9b05435367
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GCATAA"#) -}
6ed96405786649c225159c6b287cb1d9
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GATACA"#) -}
f1c089cc0b6c534168418fe81e43af1e
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "large distance"#) -}
26a64e9edc0cd7b0d90e580a35193ee6
  main59 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main60) -}
ae7f11542bfae901093cb6775cb949fb
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main8
                   Main.main7) -}
ab540a49fc678219f50c219926db3661
  main60 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
a8af8eb729c4227a3b0b55126abdbf90
  main61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GAT"#) -}
5e92803819dec1e4854a3a7af5dc9410
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TAG"#) -}
f316b5ff2d9fcbf560305cc1ed1012f2
  main63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "same nucleotides in different positions"#) -}
666066d65a59e49f523688914ca08b58
  main64 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main65) -}
d470b2b5ffa7c47914702938098fa3af
  main65 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
bae52d85d0a4d4e4f7cae4943a051fd5
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGA"#) -}
f69e9315435aafb82e63764851695155
  main67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGG"#) -}
8b867033bc4398baa6e01d0cab20f21e
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-unique character in second strand"#) -}
c87941e62f39d1046db8d68fe5836d43
  main69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "non-unique character in first strand"#) -}
c12736fcd05773f07646467292154799
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "amming"#) -}
a8228846dd8dae0514309d486d85da89
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ACTATGG"#) -}
9586de22ee0ee6e75f126fbf8d85864b
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ACCAGGG"#) -}
c84a43091a3a1d909f6c1a24f115d10a
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "small distance in long strands"#) -}
519a76356a7f31205e880fbbafeacaa2
  main73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGTCG"#) -}
22c9ea45e27312791d562d1a485e97d9
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGACG"#) -}
e943fbc97128271640dec6c1f8dc3ba1
  main75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "small distance"#) -}
daafc5e50f9a1755ade538d1ba3dd05c
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CT"#) -}
89d5e43d74fa1766a8767b6a5c6d8386
  main77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AT"#) -}
fca6e7a669301e1bd2095471daf836a6
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "small distance in small strands"#) -}
2b67229b7fe4762f357b1a961084c6d5
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AG"#) -}
947d9744d7454366e7e4225635a65a91
  main8 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'h'#) -}
6930ce05e6349779a8d86a823b32ee14
  main80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "complete distance in small strands"#) -}
61b82aae0d9694ec1f889faffaede63a
  main81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "G"#) -}
6f12d66bafdc69bdedf3bc9e0a71794e
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "A"#) -}
90b944187044b2ad1a7a1b6838bebcc6
  main83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "complete distance in single nucleotide strands"#) -}
12a391fce222c635677734ae158b5949
  main84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGACTGA"#) -}
b19d8d9ac5bcf3635160825fbc17e6df
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "long identical strands"#) -}
68bbefbac5ce0610ce2f717e95c73622
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "identical strands"#) -}
1f647832f2aac3ada1bc560d498674db
  main87 :: Test.Hspec.Options.Config
  {- Unfolding: (Test.Hspec.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Options.ColorAuto
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Internal.Formatter)
                   GHC.Types.False
                   Test.Hspec.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
6a6348943cbe67c656f42e72c21373fe
  main88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
f2a0b7542acc803a1bf6e5afa2d93dd7
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main85
                   Main.main84
                   Main.main84
                   Main.main46
                   Main.main10
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                        (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                  <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N)))
                   w) -}
970ba5d9b4ffdc72c58540d9ec3c6b40
  strand1 :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds2 }) -}
56f9677d35a173966d275a8e815264d8
  strand2 :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds3 }) -}
"SPEC/Main $fEqMaybe @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                       GHC.Types.Int)
  GHC.Base.$fEqMaybe @ GHC.Types.Int $dEq = Main.$s$fEqMaybe
"SPEC/Main $fEqMaybe_$c== @ Int" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                            GHC.Types.Int)
  GHC.Base.$fEqMaybe_$c== @ GHC.Types.Int $dEq
  = Main.$s$fEqMaybe_$s$fEqMaybe_$c==
"SPEC/Main $fShowMaybe @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                           GHC.Types.Int)
  GHC.Show.$fShowMaybe @ GHC.Types.Int $dShow = Main.$s$fShowMaybe
"SPEC/Main $fShowMaybe_$cshowList @ Int" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                      GHC.Types.Int)
  GHC.Show.$fShowMaybe_$cshowList @ GHC.Types.Int $dShow
  = Main.$s$fShowMaybe_$s$fShowMaybe_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

