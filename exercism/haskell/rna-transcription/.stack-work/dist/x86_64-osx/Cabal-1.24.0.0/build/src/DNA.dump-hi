
==================== FINAL INTERFACE ====================
2016-09-17 15:03:57.314862 UTC

interface rna-transcription-0.0.0-7k1wXbZC5WjL6mVThR1DCY:DNA 8001
  interface hash: be866178fc458ba3798392951698e09b
  ABI hash: e28dac76ac33f4d5577e83bc47afcbd4
  export-list hash: dcf509901294bc7fa1c4df28f00426dc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a4046e0fdab24403354cf30558c1ea1c
  sig of: Nothing
  used TH splices: False
  where
exports:
  DNA.toRNA
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.0.0:Data.Traversable 7ce5b7ee67475ac3d03ae825b86efd9f
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 8f3eaf1368a7ea27857993e3febae6a3
5f5d28f819638518e1a9ab96245e7e34
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module DNA.$trModule2 DNA.$trModule1) -}
6eb127bc4bc5990c36e41b58b6df795c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DNA"#) -}
62010677a6f743030a28d19e69a7200e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rna-transcription-0.0.0-7k1wXbZC5WjL6mVThR1DCY"#) -}
effa53cb5888789674ef50b8a1b5e1ae
  toRNA :: GHC.Base.String -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (str :: GHC.Base.String) ->
                 DNA.toRNA_go
                   (GHC.Base.build
                      @ (GHC.Base.Maybe GHC.Types.Char)
                      (\ @ b1
                         (c :: GHC.Base.Maybe GHC.Types.Char -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Char
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Base.Maybe GHC.Types.Char)
                            @ b1
                            @ GHC.Types.Char
                            c
                            DNA.toRNA1)
                         n
                         str))) -}
8a2ce98f876e120ae1a185d9e430d816
  toRNA1 :: GHC.Types.Char -> GHC.Base.Maybe GHC.Types.Char
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (y :: GHC.Types.Char) ->
                 GHC.List.lookup
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   y
                   DNA.toRNA_x) -}
66c9fc393b0fc0baa721f3515695dedc
  toRNA2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GCAU"#) -}
8d92a32530634535be0798bf13196efd
  toRNA3 :: [GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Char)]
  {- Unfolding: (GHC.CString.unpackFoldrCString#
                   @ ([GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Char)])
                   "CGTA"#
                   DNA.toRNA5
                   DNA.toRNA4) -}
56aa4aed565e96b626cecdd3736b3ee3
  toRNA4 :: [GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Char)]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Char)) -}
dce484f7a7ebe5aa9c93d4660b35912c
  toRNA5 ::
    GHC.Types.Char
    -> ([GHC.Types.Char] -> [(GHC.Types.Char, GHC.Types.Char)])
    -> [GHC.Types.Char]
    -> [(GHC.Types.Char, GHC.Types.Char)]
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (_x :: GHC.Types.Char)
                   (_r :: [GHC.Types.Char]
                          -> [(GHC.Types.Char, GHC.Types.Char)])[OneShot]
                   (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Char)
                   : y ys
                   -> GHC.Types.:
                        @ (GHC.Types.Char, GHC.Types.Char)
                        (_x, y)
                        (_r ys) }) -}
5695259b3f7ba49396553aacedd1ea6e
  toRNA_go ::
    [GHC.Base.Maybe GHC.Types.Char] -> GHC.Base.Maybe [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
421d34ccf36972f29cc543ac6c6bb3a5
  toRNA_x :: [(GHC.Types.Char, GHC.Types.Char)]
  {- Unfolding: (DNA.toRNA3 DNA.toRNA2) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

